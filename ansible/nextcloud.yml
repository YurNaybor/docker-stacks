---
- name: Create nextcloud docker directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ docker_data_dir }}/nextcloud/"
    - "{{ docker_data_dir }}/nextcloud/borgmatic.d"
  become: yes

- name: Template borgmatic config
  template:
    src: "{{ item }}"
    dest: "{{ docker_data_dir }}/{{ item }}"
  with_items:
    - "nextcloud/borgmatic.d/config.yaml"
    - "nextcloud/borgmatic.d/crontab.txt"
  become: yes

- name: Create nextcloud docker directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ docker_data_dir }}/nextcloud/"
  become: yes

- name: Create nextcloud backend network
  docker_network:
    name: nextcloud_backend
  become: yes

- name: Run nextcloud database container
  docker_container:
    name: nextcloud_db
    image: "linuxserver/mariadb:{{ nextcloud_mariadb_version }}"
    state: "{{ nextcloud_state | default('started') }}"
    restart_policy: unless-stopped
    env:
      TZ: "{{ nextcloud_timezone }}"
      MYSQL_ROOT_PASSWORD: "{{ nextcloud_mariadb_root_password }}"
      MYSQL_DATABASE: "{{ nextcloud_mariadb_database }}"
      MYSQL_USER: "{{ nextcloud_mariadb_user }}"
      MYSQL_PASSWORD: "{{ nextcloud_mariadb_password }}"
    networks:
      - name: nextcloud_backend
        aliases:
          - db
    networks_cli_compatible: yes
    volumes:
      - "nextcloud_db_data:/config"
  become: yes

- name: Run nextcloud container
  docker_container:
    name: nextcloud
    image: "linuxserver/nextcloud:{{ nextcloud_version }}"
    state: "{{ nextcloud_state | default('started') }}"
    restart_policy: unless-stopped
    env:
      TZ: "{{ nextcloud_timezone }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.nextcloud.entrypoints: "websecure"
      traefik.http.routers.nextcloud.rule: "{{ nextclout_traefik_router_rule }}"
      traefik.http.services.nextcloud.loadbalancer.server.port: "443"
      traefik.http.services.nextcloud.loadbalancer.server.scheme: "https"
      traefik.http.routers.nextcloud.middlewares: "nextcloud,nextcloud_redirect"
      traefik.http.middlewares.nextcloud.headers.stsSeconds: "155520011"
      traefik.http.middlewares.nextcloud.headers.stsIncludeSubdomains: "true"
      traefik.http.middlewares.nextcloud.headers.stsPreload: "true"
      traefik.http.middlewares.nextcloud_redirect.redirectregex.regex: "/.well-known/(card|cal)dav"
      traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement: "/remote.php/dav/"
    networks:
      - name: nextcloud_backend
      - name: ingress
    networks_cli_compatible: yes
    volumes:
      - "nextcloud_config:/config"
      - "nextcloud_data:/data"
  become: yes

- name: Clone backup image sources
  git:
    repo: https://github.com/b3vis/docker-borgmatic.git
    dest: "{{ docker_data_dir }}/nextcloud/docker-borgmatic"
    version: "{{ nextcloud_backup_borgmatic_version | replace('latest', 'HEAD') }}"
  when: "{{ nextcloud_backup_borgmatic_build }}"
  become: yes

- name: Build backup image (no arm image available on docker hub)
  docker_image:
    name: "b3vis/borgmatic:{{ nextcloud_backup_borgmatic_version }}"
    source: build
    build:
      path: "{{ docker_data_dir }}/nextcloud/docker-borgmatic/base"
      pull: yes
    state: present
  when: "{{ nextcloud_backup_borgmatic_build }}"
  become: yes

- name: Run backup container
  docker_container:
    name: nextcloud_backup
    image: "b3vis/borgmatic:{{ nextcloud_backup_borgmatic_version }}"
    state: "{{ nextcloud_state | default('started') }}"
    restart_policy: unless-stopped
    env:
      TZ: "{{ nextcloud_timezone }}"
      BORG_PASSPHRASE: "{{ nextcloud_backup_borg_passphrase }}"
    networks:
      - name: nextcloud_backend
    networks_cli_compatible: yes
    volumes:
      - "nextcloud_config:/mnt/src/config:ro"
      - "nextcloud_data:/mnt/src/data:ro"
      - "{{ nextcloud_backup_target }}:/mnt/borg-repository"
      - "/root/.config/borg:/root/.config/borg"
      - "/root/.cache/borg:/root/.cache/borg"
      - "/root/.borgmatic:/root/.borgmatic"
      - "{{ docker_data_dir }}/nextcloud/borgmatic.d:/etc/borgmatic.d"
  become: yes
